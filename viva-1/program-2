#include<iostream> 
#include<GL/glut.h> 
#include<math.h> 

using namespace std;

float x,x2,x3,y,y2,y3,tx,ty,theta,sx,sy,X, X2, X3, Y, Y2, Y3;
int choice,choice2;

void translate(float tx, float ty)
{
	X = x + tx;
	X2 = x2 + tx;
	X3 = x3 + tx;
	
	Y = y + ty;
	Y2 = y2 + ty;
	Y3 = y3 + ty;
}

void rotate(float theta)
{
	float theta_radians = (theta*3.142)/180;
	
	X = x*cos(theta_radians) - y*sin(theta_radians);
	Y = x*sin(theta_radians) + y*cos(theta_radians);
	
	X2 = x2*cos(theta_radians) - y2*sin(theta_radians);
	Y2 = x2*sin(theta_radians) + y2*cos(theta_radians);
	
	X3= x3*cos(theta_radians) - y3*sin(theta_radians);;
	Y3 = x3*sin(theta_radians) + y3*cos(theta_radians);	
}
void reflect(int choice2)
{
	if(choice2==1)
	{
		X = x;
		Y = -y;
		X2 = x2;
		Y2 = -y2;
		X3 = x3;
		Y3 = -y3;
	}
	
	else if(choice2==2)
	{
		X = -x;
		Y = y;
		X2 = -x2;
		Y2 = y2;
		X3 = -x3;
		Y3 = y3;
	}
	
	else
	{
		X = -x;
		Y = -y;
		X2 = -x2;
		Y2 = -y2;
		X3 = -x3;
		Y3 = -y3;
	}
}
void myInit (void)
{ 
	glMatrixMode(GL_PROJECTION); 
	glLoadIdentity(); 
	
	gluOrtho2D(-25, 25, -25, 25); 
} 

void display (void)
{ 
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,1.0,0.0);
	
	if(choice==1)
	{
		translate(tx,ty);
	}
	
	else if(choice==2)
	{
		rotate(theta);
	}
	
	else
	{
		reflect(choice2);
	}
	
	glBegin(GL_TRIANGLES);
		glVertex2f(X,Y);
		glVertex2f(X2,Y2);
		glVertex2f(X3,Y3);
	glEnd();
		
	glFlush(); 
} 
